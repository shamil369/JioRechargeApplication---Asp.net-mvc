@model JioMobileRechargeApplication.Models.RegisterModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<link href="~/Content/Css/AddDetails.css" rel="stylesheet" />

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
   
<div class="row p-5">
    @if (@ViewBag.Userexist != null)
    {
        <p class="text-end fs-5 rounded-2 w-25 p-3 text-bg-dark text-info">@ViewBag.Userexist</p>
    }
    @if (@ViewBag.Msg!= null)
    {
        <p class="text-end fs-5 rounded-2 w-25 p-3 text-bg-dark text-info">@ViewBag.Msg</p>
    }
    <div class=" d-flex justify-content-center">
        @using (Html.BeginForm("AddDetails", "Register", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal signdiv">
                <p>&nbsp;</p>
                <h4 class="text-center">Signup &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h4>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control", @id = "fname", @placeholder = "Enter First Name", @onfocusout = "checkFirstname()", @data_val = "true" } })
                        @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                        <small></small>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control", @id = "lname", @placeholder = "Enter Last name", @onfocusout = "checkLastname()" } })
                        @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                        <small></small>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Dateofbirth, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Dateofbirth, new { htmlAttributes = new { @class = "form-control", @id = "dob", @onfocusout = "checkDateofbirth()" } })
                        @Html.ValidationMessageFor(model => model.Dateofbirth, "", new { @class = "text-danger" })
                        <small></small>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.Label("Male")
                        @Html.RadioButtonFor(model => model.Gender, "Male", new { Checked = "checked" })
                        <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                        @Html.Label("Female")
                        @Html.RadioButtonFor(model => model.Gender, "Female")

                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        <small></small>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Phonenumber, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Phonenumber, new { htmlAttributes = new { @class = "form-control", @id = "number", @placeholder = "Enter phone number ", @onfocusout = "checkNumber()" } })
                        @Html.ValidationMessageFor(model => model.Phonenumber, "", new { @class = "text-danger" })
                        <small></small>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Emailaddress, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Emailaddress, new { htmlAttributes = new { @class = "form-control", @id = "email", @placeholder = "Enter Email Address", @onfocusout = "checkEmail()" } })
                        @Html.ValidationMessageFor(model => model.Emailaddress, "", new { @class = "text-danger" })
                        <small></small>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" }, id = "textaddress", @placeholder = "Enter Address", @onfocusout = "checkAddress()" })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        <small></small>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.State, new SelectList(ViewBag.States), "Select State", new { htmlAttributes = new { @class = "form-control statesize" }, id = "statedrop", @onfocusout = "checkStat()" })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                        <small></small>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.City, new SelectList(new List<string>()), "Select City", new { htmlAttributes = new { @class = "form-control" }, id = "citydrop", @onfocusout = "checkCity()" })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        <small></small>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", id = "uname", @placeholder = "Enter username", @onfocusout = "lookUsername()" } })
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        <small></small>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", id = "password", @placeholder = "Enter Password", @onfocusout = "lookPassword()" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        <small></small>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Confirmpassword, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Confirmpassword, new { htmlAttributes = new { @class = "form-control", @id = "cpassword", @placeholder = "Enter Confirm password", @onfocusout = "checkConfirm()" } })
                        @Html.ValidationMessageFor(model => model.Confirmpassword, "", new { @class = "text-danger" })
                        <small></small>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Profilephoto, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        <input type="file" name="File" id="File" accept=".jpg,.jpeg,.png" class="form-control" />
                        @Html.HiddenFor(model => model.Profilephoto, new { htmlAttributes = new { @class = "form-control" } })

                        @*   @Html.ValidationMessageFor(model => model.Profilephoto, "", new { @class = "text-danger" }) *@
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10 text-center">
                        <input type="submit" value="Create" class="btn btn-primary" onclick="return checkValidations()" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    </div>
                </div>
                <p>&nbsp;</p>
            </div>
        }
    </div>

</div>

   

    <script>
      var cities_state = @Html.Raw(Json.Encode(ViewBag.Citiesinstate))
    </script>
    <script src="~/Content/Javscript/AddDetail.js?version=3" type="text/javascript"></script>