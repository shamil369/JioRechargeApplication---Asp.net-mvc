@model JioMobileRechargeApplication.Models.RegisterModel

@{
    ViewBag.Title = "Admin";
    Layout = "~/Views/Shared/Admin_Layout.cshtml";
}

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")


<div class="container">

    <div class="row">
        <div class="d-flex justify-content-center my-5">
            <p>&nbsp;</p>


            @using (Html.BeginForm("EditDetails", "Register", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal editadmindiv">
                    <p>&nbsp;</p>
                    <h4 class="text-center">Edit User&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h4>

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Dateofbirth, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Dateofbirth, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Dateofbirth, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Phonenumber, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Phonenumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Phonenumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Emailaddress, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Emailaddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Emailaddress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Profilephoto, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-10">
                            @{
                                var base64 = Convert.ToBase64String((byte[])Session["imgPath"]);
                                var imgsrc = string.Format("data:image/gif;base64,{0}", base64);
                            }
                            <img src="@imgsrc" width="60" height="60" />
                            @Html.HiddenFor(model => model.Profilephoto, new { htmlAttributes = new { @class = "form-control" } })
                            <input type="file" name="File" id="File" accept=".jpg,.jpeg,.png" class="form-control"/>

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10 text-center">
                            <input type="submit" value="Save" class="btn btn-success text-center" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </div>
                    </div>
                    <p>&nbsp;</p>
                </div>
            }
        </div>
    </div>

    <div>
        @Html.ActionLink("Back to List", "GetDetails","Register" , new {area =""}, new { @class="btn btn-primary"})
    </div>
</div>